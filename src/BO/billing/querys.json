{
    "selectAllBills": "SELECT bl.id_bill id, pse.na_person vendedor, pcl.na_person cliente, st.de_status_bill status, bl.da_bill fecha FROM billing.bill bl  INNER JOIN person.person pse ON pse.id_person = bl.id_person_se INNER JOIN person.person pcl ON pcl.id_person = bl.id_person_cl INNER JOIN billing.status_bill st ON st.id_status_bill = bl.id_status_bill",
    "selectAllItemsByBill": "SELECT rw.id_row id, pr.de_product, rw.am_row FROM billing.row rw INNER JOIN sell.product_sale ps ON ps.id_product_sale = rw.id_product_sale INNER JOIN sell.product pr ON pr.id_product = ps.id_product WHERE rw.id_bill = $1",
    "selectBillBySeller": "SELECT bl.id_bill id, pcl.na_person cliente, st.de_status_bill status, bl.da_bill fecha FROM billing.bill bl  INNER JOIN person.person pse ON pse.id_person = bl.id_person_se INNER JOIN person.person pcl ON pcl.id_person = bl.id_person_cl INNER JOIN billing.status_bill st ON st.id_status_bill = bl.id_status_bill WHERE pse.na_person LIKE '%$1%'",
    "selectBillByClient": "SELECT bl.id_bill id, pse.na_person vendedor, st.de_status_bill status, bl.da_bill fecha FROM billing.bill bl  INNER JOIN person.person pse ON pse.id_person = bl.id_person_se INNER JOIN person.person pcl ON pcl.id_person = bl.id_person_cl INNER JOIN billing.status_bill st ON st.id_status_bill = bl.id_status_bill WHERE pcl.na_person LIKE '%$1%'",
    "selectBillsByDate": "SELECT bl.id_bill id, pse.na_person vendedor, pcl.na_person cliente, st.de_status_bill status FROM billing.bill bl  INNER JOIN person.person pse ON pse.id_person = bl.id_person_se INNER JOIN person.person pcl ON pcl.id_person = bl.id_person_cl INNER JOIN billing.status_bill st ON st.id_status_bill = bl.id_status_bill WHERE bl.da_bill = $1",
    "selectBillsByStatus": "SELECT bl.id_bill id, pse.na_person vendedor, pcl.na_person cliente, st.de_status_bill status, bl.da_bill fecha FROM billing.bill bl  INNER JOIN person.person pse ON pse.id_person = bl.id_person_se INNER JOIN person.person pcl ON pcl.id_person = bl.id_person_cl INNER JOIN billing.status_bill st ON st.id_status_bill = bl.id_status_bill WHERE st.de_status_bill = $1",
    "selectAllStatus": "SELECT id_status_bill id, de_status_bill descripcion FROM billing.status_bill",
    "selectTotalByBill": "SELECT rw.id_bill, SUM(rw.am_row) total FROM billing.row rw WHERE rw.id_bill = $1 GROUP BY rw.id_bill ",
    "selectTotalDebt": "SELECT dbt.id_bill idBill, SUM(dbt.am_paid) total FROM billing.debt dbt WHERE dbt.id_bill = $1 GROUP BY dbt.id_bill ",
    "selectTotalPaid": "SELECT id_bill, SUM(am_pay) total FROM billing.pay WHERE id_bill = $1 GROUP BY id_bill",
    "selectDateLimitToPaidByBill": "SELECT da_limit FROM billing.debt WHERE id_bill = $1",
    "selectStatusBillByName": "SELECT id_status_bill, de_status_bill FROM billing.status_bill WHERE de_status_bill = $1",
    "selectStatusByBill": "SELECT st.de_status_bill FROM billing.bill bl INNER JOIN billing.status_bill st ON st.id_status_bill = bl.id_status_bill WHERE bl.id_bill = $1",
    "selectAllPaidByBill": "SELECT p.id_pay, p.am_pay, pmbk.de_pay_method_bank, bk.de_bank, pmo.de_pay_method_other FROM billing.pay p LEFT JOIN billing.pay_bank pb ON p.id_pay = pb.id_pay LEFT JOIN billing.pay_other po ON po.id_pay = p.id_pay LEFT JOIN billing.bank bk ON bk.id_bank = pb.id_bank LEFT JOIN billing.pay_method_bank pmbk ON pmbk.id_pay_method_bank = pb.id_pay_method_bank LEFT JOIN billing.pay_method_other pmo ON pmo.id_pay_method_other = po.id_pay_method_other",
    "selectAllPaidByBillConcat": "SELECT p.id_pay, p.am_pay, CASE WHEN pmbk.de_pay_method_bank IS NOT NULL THEN CONCAT(pmbk.de_pay_method_bank, ', ', bk.de_bank) ELSE pmo.de_pay_method_other END AS payment_method FROM billing.pay p LEFT JOIN billing.pay_bank pb ON p.id_pay = pb.id_pay LEFT JOIN billing.pay_other po ON po.id_pay = p.id_pay LEFT JOIN billing.bank bk ON bk.id_bank = pb.id_bank LEFT JOIN billing.pay_method_bank pmbk ON pmbk.id_pay_method_bank = pb.id_pay_method_bank LEFT JOIN billing.pay_method_other pmo ON pmo.id_pay_method_other = po.id_pay_method_other",
    "selectStatusByMethodPayBank": "SELECT st.de_status_method FROM billing.pay_method_bank pmbk INNER JOIN billing.status_method st ON st.id_status_method = pmbk.id_status_method WHERE pmbk.id_pay_method_bank = $1",
    "selectStatusByMethodPayOther": "SELECT st.de_status_method FROM billing.pay_method_other pmo INNER JOIN billing.status_method st ON st.id_status_method = pmo.id_status_method WHERE pmo.id_pay_method_other = $1",
    "insertStatusBill": "INSERT INTO billing.status_bill (de_status_bill) VALUES ($1) RETURNING id_status_bill",
    "insertStatusMethod": "INSERT INTO billing.status_method (de_status_method) VALUES ($1) RETURNING id_status_method",
    "insertBill": "INSERT INTO billing.bill (id_person_se, id_person_cl, id_status_bill, da_bill) VALUES ($1, $2, $3, $4 ) RETURNING id_bill",
    "insertRowByIdBillAndDeProduct": "INSERT INTO billing.row (id_bill, id_product_sale, am_row) VALUES ( $1, $2, (SELECT ps.am_product_sale FROM sell.product_sale ps WHERE ps.id_product_sale = $2))",
    "insertDebt": "INSERT INTO billing.debt (id_bill, am_paid, da_limit) VALUES ($1, $2, $3)",
    "insertPay": "INSERT INTO billing.pay (id_bill, am_pay) VALUES ($1, $2) RETURNING id_pay",
    "insertPayBank": "INSERT INTO billing.pay_bank (id_pay, id_bank, id_pay_method_bank) VALUES ((SELECT id_bank FROM billing.bank WHERE de_bank = $1), (SELECT id_pay_method_bank FROM billing.pay_method_bank WHERE de_pay_method_bank = $2), $3)",
    "insertPayOther": "INSERT INTO billing.pay_other (id_pay, id_pay_method_other) VALUES ( (SELECT id_pay_method_other FROM billind.pay_method_other WHERE de_pay_method_other = $1), $2)",
    "insertPayMethodBank": "INSERT INTO billing.pay_method_bank (de_pay_method_bank, id_status_method) VALUES ($1, $2)",
    "insertBank": "INSERT INTO billing.bank (de_bank, id_status_method) VALUES ($1, $2)",
    "insertPayMethodOther": "INSERT INTO billing.pay_method_other (de_pay_method_other, id_status_method) VALUES ($1, $2)",
    "updateStatusByBill": "UPDATE billing.bill SET id_status_bill = $2 WHERE id_bill = $1",
    "updateStatusBill": "UPDATE billing.status_bill SET de_status_bill = $1 WHERE id_status_bill = $2",
    "updateStatusMethod": "UPDATE billing.status_method SET de_status_method = $1 WHERE id_status_method = $2",
    "reduceDebt": "UPDATE billing.debt SET am_paid = am_paid - $1 WHERE id_bill = $2",
    "selectAllBanks": "SELECT * FROM billing.bank",
    "selectAllBankByStatus": "SELECT * FROM billing.bank WHERE id_status_method = $1",
    "selectAllMethodBank": "SELECT * FROM billing.pay_method_bank",
    "selectAllMethodBankByStatus": "SELECT id_pay_method_bank id, de_pay_method_bank descripcion, id_status_method FROM billing.pay_method_bank WHERE id_status_method = $1",
    "selectAllMethodOther": "SELECT * FROM billing.pay_method_other",
    "selectAllMethodOtherByStatus": "SELECT id_pay_method_other id, de_pay_method_other descripcion, id_status_method FROM billing.pay_method_other WHERE id_status_method = $1",
    "updateStatusMethodBank": "UPDATE billing.pay_method_bank SET id_status_method = $1 WHERE id_pay_method_bank = $2",
    "updateStatusMethodOther": "UPDATE billing.pay_method_other SET id_status_method = $1 WHERE id_pay_method_other = $2",
    "selectAllDebts": "SELECT bl.id_bill id, p.na_person Deudor, db.da_limit Fecha_limite, db.am_paid Deuda FROM billing.debt db INNER JOIN billing.bill bl ON bl.id_bill = db.id_bill  INNER JOIN person.person p ON p.id_person = bl.id_person_cl",
    "": "",
    "updateStatusBank": "UPDATE billing.bank SET id_status_method = $1 WHERE id_bank = $2"
}